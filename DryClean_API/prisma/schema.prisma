// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  name             String?
  surname          String
  phoneNumber      Int
  password         String
  role             Role?    @relation(name: "RoleToUser", fields: [roleId], references: [id])
  roleId           Int      @default(1)
  createdAt        DateTime @default(now())
  authConfirmToken Int?
  isVarrified      Boolean? @default(false)
  orders           Order[]  @relation(name: "OrderToUser")
}

model Role {
  id          Int    @id @default(autoincrement())
  description String
  user        User[] @relation(name: "RoleToUser")
}

model Customer {
  id          Int     @id @default(autoincrement())
  Name        String
  Surname     String
  Email       String
  MobilePhone Int
  Address     String
  PostalCode  Int
  City        String
  Province    String
  Notes       String?
}

model Order {
  id                 Int                 @id @default(autoincrement())
  invoiceDate        DateTime
  collectionTime     DateTime
  orderNumber        Int
  VAT                Int
  totalAmount        Int
  totalAmountWithVAT Int
  isAccepted         Boolean             @default(false)
  orders             OrderLine[]         @relation(name: "OrderToOrderLine")
  paymentInformation PaymentInformation? @relation(name: "OrderToPaymentInformation")
  userId             Int
  user               User                @relation(name: "OrderToUser", fields: [userId], references: [id])
}

model OrderLine {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Int
  order     Order   @relation(name: "OrderToOrderLine", fields: [orderId], references: [id])
  orderId   Int
  service   Service @relation(name: "OrderlineService", fields: [serviceId], references: [id])
  serviceId Int
}

model Service {
  id            Int          @id @default(autoincrement())
  orderLines    OrderLine[]  @relation(name: "OrderlineService")
  name          String
  picture       String?
  price         Int
  status        String
  serviceType   ServiceType? @relation(name: "serviceType", fields: [serviceTypeId], references: [id])
  serviceTypeId Int
}

model PaymentInformation {
  id                Int      @id @default(autoincrement())
  paymentDate       DateTime
  paymentType       String
  paymentOrderNotes String?
  order             Order    @relation(name: "OrderToPaymentInformation", fields: [orderId], references: [id])
  orderId           Int      @unique
}

model ServiceType {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  service     Service[] @relation(name: "serviceType")
}

model Employee {
  id           Int     @id @default(autoincrement())
  name         String
  surname      String
  employeeCode Int
  email        String
  mobilePhone  Int
  address      String
  postalCode   Int
  city         String
  province     String
  notes        String?
  shop         Shop    @relation(name: "ShopEmployee", fields: [shopId], references: [id])
  shopId       Int
}

model Shop {
  id          Int        @id @default(autoincrement())
  employees   Employee[] @relation(name: "ShopEmployee")
  name        String
  location    String
  managerName String
}

model PaymentType {
  id          Int    @id @default(autoincrement())
  Name        String
  Description String
}
